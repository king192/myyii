git remote rename [old-remote-name] [new-remote-name]：重命名远程仓库。
2. Git 只关心文件数据的整体是否发生变化，并不保存前后变化的差异数据。
3. Git 在本地磁盘上保存着所有有关当前项目的历史更新，所以绝大多数操作只需要访问本地文件和资源，无需联网。
4. 通过指纹字符串来时刻保持数据的完整性。
5. 任何文件在Git内都只有三种状态：
      已提交（committed）：表示文件已经被安全保存到本地数据库中了。
      已修改（modified）：表示已经修改了某个文件但是还没有提交保存。
      已暂存（staged）：表示把已修改的文件放在下次提交时要保存的清单中。
6. 由于上述三种状态，在用Git管理项目时，文章流转的三个工作区域：
      Git的本地数据目录：每个项目都有一个 git 目录，它是 Git 用来保存元数据和对象数据库的地方。该目录非常重要，每次克隆镜像仓库的时候，实际拷贝的就是这个目录里面的数据。
      工作目录：从项目中取出某个版本的所有文件和目录，用以开始后续工作的叫做工作目录。
      暂存区域：所谓的暂存区域只不过是个简单的文件，一般都放在 git 目录中。
7. Git 配置，Git的配置信息保存在三个位置：
      /etc/gitconfig 文件：该文件中的配置对系统的所有用户都有效。通过--system选项，读写的就是这个文件。
      用户目录下的.gitconfig文件：该文件中的配置只对当前用户有效。通过--global选项，读写的就是这个文件。
      当前项目下.git/config文件：该文件只对当前项目有效。
8. 通过在项目目录下建立 .gitignore 文件来指定让Git忽略的文件或者目录。
9. Git本地仓库的基本用法：
     ① git init ：初试化当前目录为一个Git本地仓库。
     ② git add <filename> : 如果一个文件是未被跟踪的，将 一个文件加入到版本控制当中，让Git对其进行跟踪；如果一个文件是已修改状态，则将一个文件放到暂存区中。
     ③ git status : 查看当前Git仓库中文件的状态。
     ④ git diff：比较工作目录中当前文件和暂存区域快照之间的差异，也就是修改之后还没有暂存起来的变化内容。
     ⑤ git commit：提交暂存区域。
               git commit -m <说明信息>
               git commit -a 可以跳过暂存区域，直接将已跟踪的文件暂存起来一并提交。
     ⑥ git rm <filename>：从Git中删除一个文件。
               git rm --cached：从暂存区删除一个文件，但是仍保留在工作目录中。也就是将文件变为未跟踪状态。
     ⑦ git log：查看项目提交历史记录。
               git log -p 选项展开显示每次提交的内容差异
               git log --stat 仅显示简要的增改行数统计
               git log --pretty=<option> ，其中option可以是：oneline（使每条历史信息在一行中显示），short，full，fuller，format（按指定的格式输出）
               gitk 可以打开历史记录的可视化查看窗口。
     ⑧ git commit --amend：修改最后一次提交。该命令是提交当前缓存区快照，并修改最后一次的说明。
     ⑨ git checkout -- <filename>：撤销对文件的修改，慎用！   
     ⑩ git reset HEAD <filename>：撤销对文件的暂存，让文件回到暂存前的状态。
10. Git远程仓库的基本用法：
     ① git clone [url]：将一个远程仓库克隆到本地。
     ② git remote：查看当前配置的远程仓库，在克隆完某个项目后，至少可以看到一个名为origin的远程仓库，Git 默认使用这个名字来标识你所克隆的原始仓库。
               -v ：显示对应的克隆地址。
               git remote add [remote-name] [url]：添加一个新的远程仓库。
               git remote show [remote-name]：查看远程仓库信息。
               git remote rm [remote-name]：移除远程仓库。
               git remote rename [old-remote-name] [new-remote-name]：重命名远程仓库。
     ③ git push [remote-name] [branch-name]：推送数据到远程仓库，remote-name指的是远程仓库简称，branch-name指的是分支名称。对于克隆的仓库默认分别为：origin，master